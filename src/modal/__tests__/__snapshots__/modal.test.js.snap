// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal renders portal when open: Rendered Modal 1`] = `
<Modal
  animate={true}
  autoFocus={true}
  autofocus={null}
  closeable={true}
  isOpen={true}
  overrides={Object {}}
  role="dialog"
  size="default"
  unstable_ModalBackdropScroll={false}
>
  <mockConstructor
    onDocumentClick={[Function]}
    onEscape={[Function]}
  >
    <ForwardRef
      autoFocus={true}
      returnFocus={true}
    >
      <ForwardRef
        as="div"
        autoFocus={true}
        disabled={false}
        lockProps={Object {}}
        noFocusGuards={false}
        persistentFocus={false}
        returnFocus={true}
        sideCar={[Function]}
      >
        <Portal
          key="guard-first"
        />
        <Portal
          key="guard-nearest"
        />
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          id={Object {}}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                data-baseweb="modal"
                styled-component="true"
                test-style="{
  \\"position\\": \\"fixed\\",
  \\"overflow\\": \\"auto\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"pointerEvents\\": \\"auto\\"
}"
              >
                <div
                  styled-component="true"
                  test-style="{
  \\"position\\": \\"fixed\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"backgroundColor\\": \\"rgba(0, 0, 0, 0.5)\\",
  \\"WebkitTapHighlightColor\\": \\"transparent\\",
  \\"touchAction\\": \\"none\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\"
}"
                />
                <div
                  styled-component="true"
                  test-style="{
  \\"display\\": \\"flex\\",
  \\"alignItems\\": \\"center\\",
  \\"justifyContent\\": \\"center\\",
  \\"width\\": \\"100%\\",
  \\"minHeight\\": \\"100%\\",
  \\"pointerEvents\\": \\"none\\",
  \\"userSelect\\": \\"none\\"
}"
                >
                  <div
                    aria-modal="true"
                    role="dialog"
                    styled-component="true"
                    tabindex="-1"
                    test-style="{
  \\"position\\": \\"relative\\",
  \\"backgroundColor\\": \\"$theme.colors.backgroundPrimary\\",
  \\"borderTopLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderTopRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"marginLeft\\": \\"$theme.sizing.scale600\\",
  \\"marginTop\\": \\"$theme.sizing.scale600\\",
  \\"marginRight\\": \\"$theme.sizing.scale600\\",
  \\"marginBottom\\": \\"$theme.sizing.scale600\\",
  \\"maxWidth\\": \\"100%\\",
  \\"width\\": \\"500px\\",
  \\"opacity\\": 0,
  \\"transform\\": \\"translateY(20px)\\",
  \\"transitionProperty\\": \\"opacity, transform\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\",
  \\"userSelect\\": \\"text\\",
  \\"pointerEvents\\": \\"all\\",
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  }
}"
                  >
                    <div
                      styled-component="true"
                      test-style="{
  \\"fontFamily\\": \\"$theme.typography.font550.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font550.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font550.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font550.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentPrimary\\",
  \\"marginTop\\": \\"$theme.sizing.scale900\\",
  \\"marginBottom\\": \\"$theme.sizing.scale600\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale900\\"
}"
                    >
                      Hello world
                    </div>
                    <div
                      styled-component="true"
                      test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentSecondary\\",
  \\"marginTop\\": \\"$theme.sizing.scale600\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale800\\",
  \\"marginBottom\\": \\"$theme.sizing.scale700\\"
}"
                    >
                      Modal Body
                    </div>
                    <div
                      styled-component="true"
                      test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"marginTop\\": \\"$theme.sizing.scale700\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale800\\",
  \\"paddingTop\\": \\"$theme.sizing.scale500\\",
  \\"paddingBottom\\": \\"$theme.sizing.scale500\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderTopColor\\": \\"$theme.colors.mono400\\",
  \\"textAlign\\": \\"right\\"
}"
                    >
                      Footer
                    </div>
                    <button
                      aria-label="Close"
                      styled-component="true"
                      test-style="{
  \\"background\\": \\"transparent\\",
  \\"outline\\": 0,
  \\"paddingLeft\\": 0,
  \\"paddingTop\\": 0,
  \\"paddingRight\\": 0,
  \\"paddingBottom\\": 0,
  \\"color\\": \\"$theme.colors.modalCloseColor\\",
  \\"transitionProperty\\": \\"color, border-color\\",
  \\"transitionDuration\\": \\"$theme.animation.timing100\\",
  \\"borderLeftWidth\\": \\"1px\\",
  \\"borderRightWidth\\": \\"1px\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderBottomWidth\\": \\"1px\\",
  \\"borderLeftStyle\\": \\"solid\\",
  \\"borderRightStyle\\": \\"solid\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderBottomStyle\\": \\"solid\\",
  \\"borderLeftColor\\": \\"transparent\\",
  \\"borderRightColor\\": \\"transparent\\",
  \\"borderTopColor\\": \\"transparent\\",
  \\"borderBottomColor\\": \\"transparent\\",
  \\":hover\\": {
    \\"color\\": \\"$theme.colors.modalCloseColorHover\\"
  },
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  },
  \\"position\\": \\"absolute\\",
  \\"top\\": \\"$theme.sizing.scale500\\",
  \\"right\\": \\"$theme.sizing.scale500\\",
  \\"width\\": \\"$theme.sizing.scale800\\",
  \\"height\\": \\"$theme.sizing.scale800\\",
  \\"display\\": \\"flex\\",
  \\"justifyContent\\": \\"center\\",
  \\"alignItems\\": \\"center\\",
  \\"cursor\\": \\"pointer\\"
}"
                    >
                      <svg
                        height="10"
                        style="stroke: currentColor;"
                        viewBox="0 0 10 10"
                        width="10"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M9 1L5 5M1 9L5 5M5 5L1 1M5 5L9 9"
                          stroke-linecap="round"
                          stroke-width="2"
                        />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          returnFocus={[Function]}
          shards={Array []}
          sideCar={
            Object {
              "assignMedium": [Function],
              "assignSyncMedium": [Function],
              "options": Object {
                "async": true,
                "ssr": false,
              },
              "read": [Function],
              "useMedium": [Function],
            }
          }
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            id={Object {}}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  data-baseweb="modal"
                  styled-component="true"
                  test-style="{
  \\"position\\": \\"fixed\\",
  \\"overflow\\": \\"auto\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"pointerEvents\\": \\"auto\\"
}"
                >
                  <div
                    styled-component="true"
                    test-style="{
  \\"position\\": \\"fixed\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"backgroundColor\\": \\"rgba(0, 0, 0, 0.5)\\",
  \\"WebkitTapHighlightColor\\": \\"transparent\\",
  \\"touchAction\\": \\"none\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\"
}"
                  />
                  <div
                    styled-component="true"
                    test-style="{
  \\"display\\": \\"flex\\",
  \\"alignItems\\": \\"center\\",
  \\"justifyContent\\": \\"center\\",
  \\"width\\": \\"100%\\",
  \\"minHeight\\": \\"100%\\",
  \\"pointerEvents\\": \\"none\\",
  \\"userSelect\\": \\"none\\"
}"
                  >
                    <div
                      aria-modal="true"
                      role="dialog"
                      styled-component="true"
                      tabindex="-1"
                      test-style="{
  \\"position\\": \\"relative\\",
  \\"backgroundColor\\": \\"$theme.colors.backgroundPrimary\\",
  \\"borderTopLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderTopRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"marginLeft\\": \\"$theme.sizing.scale600\\",
  \\"marginTop\\": \\"$theme.sizing.scale600\\",
  \\"marginRight\\": \\"$theme.sizing.scale600\\",
  \\"marginBottom\\": \\"$theme.sizing.scale600\\",
  \\"maxWidth\\": \\"100%\\",
  \\"width\\": \\"500px\\",
  \\"opacity\\": 0,
  \\"transform\\": \\"translateY(20px)\\",
  \\"transitionProperty\\": \\"opacity, transform\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\",
  \\"userSelect\\": \\"text\\",
  \\"pointerEvents\\": \\"all\\",
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  }
}"
                    >
                      <div
                        styled-component="true"
                        test-style="{
  \\"fontFamily\\": \\"$theme.typography.font550.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font550.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font550.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font550.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentPrimary\\",
  \\"marginTop\\": \\"$theme.sizing.scale900\\",
  \\"marginBottom\\": \\"$theme.sizing.scale600\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale900\\"
}"
                      >
                        Hello world
                      </div>
                      <div
                        styled-component="true"
                        test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentSecondary\\",
  \\"marginTop\\": \\"$theme.sizing.scale600\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale800\\",
  \\"marginBottom\\": \\"$theme.sizing.scale700\\"
}"
                      >
                        Modal Body
                      </div>
                      <div
                        styled-component="true"
                        test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"marginTop\\": \\"$theme.sizing.scale700\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale800\\",
  \\"paddingTop\\": \\"$theme.sizing.scale500\\",
  \\"paddingBottom\\": \\"$theme.sizing.scale500\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderTopColor\\": \\"$theme.colors.mono400\\",
  \\"textAlign\\": \\"right\\"
}"
                      >
                        Footer
                      </div>
                      <button
                        aria-label="Close"
                        styled-component="true"
                        test-style="{
  \\"background\\": \\"transparent\\",
  \\"outline\\": 0,
  \\"paddingLeft\\": 0,
  \\"paddingTop\\": 0,
  \\"paddingRight\\": 0,
  \\"paddingBottom\\": 0,
  \\"color\\": \\"$theme.colors.modalCloseColor\\",
  \\"transitionProperty\\": \\"color, border-color\\",
  \\"transitionDuration\\": \\"$theme.animation.timing100\\",
  \\"borderLeftWidth\\": \\"1px\\",
  \\"borderRightWidth\\": \\"1px\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderBottomWidth\\": \\"1px\\",
  \\"borderLeftStyle\\": \\"solid\\",
  \\"borderRightStyle\\": \\"solid\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderBottomStyle\\": \\"solid\\",
  \\"borderLeftColor\\": \\"transparent\\",
  \\"borderRightColor\\": \\"transparent\\",
  \\"borderTopColor\\": \\"transparent\\",
  \\"borderBottomColor\\": \\"transparent\\",
  \\":hover\\": {
    \\"color\\": \\"$theme.colors.modalCloseColorHover\\"
  },
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  },
  \\"position\\": \\"absolute\\",
  \\"top\\": \\"$theme.sizing.scale500\\",
  \\"right\\": \\"$theme.sizing.scale500\\",
  \\"width\\": \\"$theme.sizing.scale800\\",
  \\"height\\": \\"$theme.sizing.scale800\\",
  \\"display\\": \\"flex\\",
  \\"justifyContent\\": \\"center\\",
  \\"alignItems\\": \\"center\\",
  \\"cursor\\": \\"pointer\\"
}"
                      >
                        <svg
                          height="10"
                          style="stroke: currentColor;"
                          viewBox="0 0 10 10"
                          width="10"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M9 1L5 5M1 9L5 5M5 5L1 1M5 5L9 9"
                            stroke-linecap="round"
                            stroke-width="2"
                          />
                        </svg>
                      </button>
                    </div>
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            returnFocus={[Function]}
            shards={Array []}
            sideCar={
              Object {
                "assignMedium": [Function],
                "assignSyncMedium": [Function],
                "options": Object {
                  "async": true,
                  "ssr": false,
                },
                "read": [Function],
                "useMedium": [Function],
              }
            }
          />
        </SideEffect(FocusWatcher)>
        <Portal>
          <ForwardRef
            $animate={true}
            $closeable={true}
            $isFocusVisible={false}
            $isOpen={true}
            $isVisible={false}
            $role="dialog"
            $size="default"
            $unstable_ModalBackdropScroll={false}
            data-baseweb="modal"
          >
            <MockStyledComponent
              $animate={true}
              $closeable={true}
              $isFocusVisible={false}
              $isOpen={true}
              $isVisible={false}
              $role="dialog"
              $size="default"
              $unstable_ModalBackdropScroll={false}
              data-baseweb="modal"
              forwardedRef={
                Object {
                  "current": <div
                    data-baseweb="modal"
                    styled-component="true"
                    test-style="{
  \\"position\\": \\"fixed\\",
  \\"overflow\\": \\"auto\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"pointerEvents\\": \\"auto\\"
}"
                  >
                    <div
                      styled-component="true"
                      test-style="{
  \\"position\\": \\"fixed\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"backgroundColor\\": \\"rgba(0, 0, 0, 0.5)\\",
  \\"WebkitTapHighlightColor\\": \\"transparent\\",
  \\"touchAction\\": \\"none\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\"
}"
                    />
                    <div
                      styled-component="true"
                      test-style="{
  \\"display\\": \\"flex\\",
  \\"alignItems\\": \\"center\\",
  \\"justifyContent\\": \\"center\\",
  \\"width\\": \\"100%\\",
  \\"minHeight\\": \\"100%\\",
  \\"pointerEvents\\": \\"none\\",
  \\"userSelect\\": \\"none\\"
}"
                    >
                      <div
                        aria-modal="true"
                        role="dialog"
                        styled-component="true"
                        tabindex="-1"
                        test-style="{
  \\"position\\": \\"relative\\",
  \\"backgroundColor\\": \\"$theme.colors.backgroundPrimary\\",
  \\"borderTopLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderTopRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"marginLeft\\": \\"$theme.sizing.scale600\\",
  \\"marginTop\\": \\"$theme.sizing.scale600\\",
  \\"marginRight\\": \\"$theme.sizing.scale600\\",
  \\"marginBottom\\": \\"$theme.sizing.scale600\\",
  \\"maxWidth\\": \\"100%\\",
  \\"width\\": \\"500px\\",
  \\"opacity\\": 0,
  \\"transform\\": \\"translateY(20px)\\",
  \\"transitionProperty\\": \\"opacity, transform\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\",
  \\"userSelect\\": \\"text\\",
  \\"pointerEvents\\": \\"all\\",
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  }
}"
                      >
                        <div
                          styled-component="true"
                          test-style="{
  \\"fontFamily\\": \\"$theme.typography.font550.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font550.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font550.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font550.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentPrimary\\",
  \\"marginTop\\": \\"$theme.sizing.scale900\\",
  \\"marginBottom\\": \\"$theme.sizing.scale600\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale900\\"
}"
                        >
                          Hello world
                        </div>
                        <div
                          styled-component="true"
                          test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentSecondary\\",
  \\"marginTop\\": \\"$theme.sizing.scale600\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale800\\",
  \\"marginBottom\\": \\"$theme.sizing.scale700\\"
}"
                        >
                          Modal Body
                        </div>
                        <div
                          styled-component="true"
                          test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"marginTop\\": \\"$theme.sizing.scale700\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale800\\",
  \\"paddingTop\\": \\"$theme.sizing.scale500\\",
  \\"paddingBottom\\": \\"$theme.sizing.scale500\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderTopColor\\": \\"$theme.colors.mono400\\",
  \\"textAlign\\": \\"right\\"
}"
                        >
                          Footer
                        </div>
                        <button
                          aria-label="Close"
                          styled-component="true"
                          test-style="{
  \\"background\\": \\"transparent\\",
  \\"outline\\": 0,
  \\"paddingLeft\\": 0,
  \\"paddingTop\\": 0,
  \\"paddingRight\\": 0,
  \\"paddingBottom\\": 0,
  \\"color\\": \\"$theme.colors.modalCloseColor\\",
  \\"transitionProperty\\": \\"color, border-color\\",
  \\"transitionDuration\\": \\"$theme.animation.timing100\\",
  \\"borderLeftWidth\\": \\"1px\\",
  \\"borderRightWidth\\": \\"1px\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderBottomWidth\\": \\"1px\\",
  \\"borderLeftStyle\\": \\"solid\\",
  \\"borderRightStyle\\": \\"solid\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderBottomStyle\\": \\"solid\\",
  \\"borderLeftColor\\": \\"transparent\\",
  \\"borderRightColor\\": \\"transparent\\",
  \\"borderTopColor\\": \\"transparent\\",
  \\"borderBottomColor\\": \\"transparent\\",
  \\":hover\\": {
    \\"color\\": \\"$theme.colors.modalCloseColorHover\\"
  },
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  },
  \\"position\\": \\"absolute\\",
  \\"top\\": \\"$theme.sizing.scale500\\",
  \\"right\\": \\"$theme.sizing.scale500\\",
  \\"width\\": \\"$theme.sizing.scale800\\",
  \\"height\\": \\"$theme.sizing.scale800\\",
  \\"display\\": \\"flex\\",
  \\"justifyContent\\": \\"center\\",
  \\"alignItems\\": \\"center\\",
  \\"cursor\\": \\"pointer\\"
}"
                        >
                          <svg
                            height="10"
                            style="stroke: currentColor;"
                            viewBox="0 0 10 10"
                            width="10"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M9 1L5 5M1 9L5 5M5 5L1 1M5 5L9 9"
                              stroke-linecap="round"
                              stroke-width="2"
                            />
                          </svg>
                        </button>
                      </div>
                    </div>
                  </div>,
                }
              }
            >
              <Portal>
                <ForwardRef
                  $animate={true}
                  $closeable={true}
                  $isFocusVisible={false}
                  $isOpen={true}
                  $isVisible={false}
                  $role="dialog"
                  $size="default"
                  $unstable_ModalBackdropScroll={false}
                >
                  <MockStyledComponent
                    $animate={true}
                    $closeable={true}
                    $isFocusVisible={false}
                    $isOpen={true}
                    $isVisible={false}
                    $role="dialog"
                    $size="default"
                    $unstable_ModalBackdropScroll={false}
                    forwardedRef={
                      Object {
                        "current": <div
                          styled-component="true"
                          test-style="{
  \\"position\\": \\"fixed\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"backgroundColor\\": \\"rgba(0, 0, 0, 0.5)\\",
  \\"WebkitTapHighlightColor\\": \\"transparent\\",
  \\"touchAction\\": \\"none\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\"
}"
                        />,
                      }
                    }
                  >
                    <Portal />
                  </MockStyledComponent>
                </ForwardRef>
                <ForwardRef
                  $animate={true}
                  $closeable={true}
                  $isFocusVisible={false}
                  $isOpen={true}
                  $isVisible={false}
                  $role="dialog"
                  $size="default"
                  $unstable_ModalBackdropScroll={false}
                >
                  <MockStyledComponent
                    $animate={true}
                    $closeable={true}
                    $isFocusVisible={false}
                    $isOpen={true}
                    $isVisible={false}
                    $role="dialog"
                    $size="default"
                    $unstable_ModalBackdropScroll={false}
                    forwardedRef={null}
                  >
                    <Portal>
                      <ForwardRef
                        $animate={true}
                        $closeable={true}
                        $isFocusVisible={false}
                        $isOpen={true}
                        $isVisible={false}
                        $role="dialog"
                        $size="default"
                        $unstable_ModalBackdropScroll={false}
                        aria-modal="true"
                        role="dialog"
                        tabIndex={-1}
                      >
                        <MockStyledComponent
                          $animate={true}
                          $closeable={true}
                          $isFocusVisible={false}
                          $isOpen={true}
                          $isVisible={false}
                          $role="dialog"
                          $size="default"
                          $unstable_ModalBackdropScroll={false}
                          aria-modal="true"
                          forwardedRef={
                            Object {
                              "current": <div
                                aria-modal="true"
                                role="dialog"
                                styled-component="true"
                                tabindex="-1"
                                test-style="{
  \\"position\\": \\"relative\\",
  \\"backgroundColor\\": \\"$theme.colors.backgroundPrimary\\",
  \\"borderTopLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderTopRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"marginLeft\\": \\"$theme.sizing.scale600\\",
  \\"marginTop\\": \\"$theme.sizing.scale600\\",
  \\"marginRight\\": \\"$theme.sizing.scale600\\",
  \\"marginBottom\\": \\"$theme.sizing.scale600\\",
  \\"maxWidth\\": \\"100%\\",
  \\"width\\": \\"500px\\",
  \\"opacity\\": 0,
  \\"transform\\": \\"translateY(20px)\\",
  \\"transitionProperty\\": \\"opacity, transform\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\",
  \\"userSelect\\": \\"text\\",
  \\"pointerEvents\\": \\"all\\",
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  }
}"
                              >
                                <div
                                  styled-component="true"
                                  test-style="{
  \\"fontFamily\\": \\"$theme.typography.font550.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font550.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font550.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font550.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentPrimary\\",
  \\"marginTop\\": \\"$theme.sizing.scale900\\",
  \\"marginBottom\\": \\"$theme.sizing.scale600\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale900\\"
}"
                                >
                                  Hello world
                                </div>
                                <div
                                  styled-component="true"
                                  test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentSecondary\\",
  \\"marginTop\\": \\"$theme.sizing.scale600\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale800\\",
  \\"marginBottom\\": \\"$theme.sizing.scale700\\"
}"
                                >
                                  Modal Body
                                </div>
                                <div
                                  styled-component="true"
                                  test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"marginTop\\": \\"$theme.sizing.scale700\\",
  \\"marginLeft\\": \\"$theme.sizing.scale800\\",
  \\"marginRight\\": \\"$theme.sizing.scale800\\",
  \\"paddingTop\\": \\"$theme.sizing.scale500\\",
  \\"paddingBottom\\": \\"$theme.sizing.scale500\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderTopColor\\": \\"$theme.colors.mono400\\",
  \\"textAlign\\": \\"right\\"
}"
                                >
                                  Footer
                                </div>
                                <button
                                  aria-label="Close"
                                  styled-component="true"
                                  test-style="{
  \\"background\\": \\"transparent\\",
  \\"outline\\": 0,
  \\"paddingLeft\\": 0,
  \\"paddingTop\\": 0,
  \\"paddingRight\\": 0,
  \\"paddingBottom\\": 0,
  \\"color\\": \\"$theme.colors.modalCloseColor\\",
  \\"transitionProperty\\": \\"color, border-color\\",
  \\"transitionDuration\\": \\"$theme.animation.timing100\\",
  \\"borderLeftWidth\\": \\"1px\\",
  \\"borderRightWidth\\": \\"1px\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderBottomWidth\\": \\"1px\\",
  \\"borderLeftStyle\\": \\"solid\\",
  \\"borderRightStyle\\": \\"solid\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderBottomStyle\\": \\"solid\\",
  \\"borderLeftColor\\": \\"transparent\\",
  \\"borderRightColor\\": \\"transparent\\",
  \\"borderTopColor\\": \\"transparent\\",
  \\"borderBottomColor\\": \\"transparent\\",
  \\":hover\\": {
    \\"color\\": \\"$theme.colors.modalCloseColorHover\\"
  },
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  },
  \\"position\\": \\"absolute\\",
  \\"top\\": \\"$theme.sizing.scale500\\",
  \\"right\\": \\"$theme.sizing.scale500\\",
  \\"width\\": \\"$theme.sizing.scale800\\",
  \\"height\\": \\"$theme.sizing.scale800\\",
  \\"display\\": \\"flex\\",
  \\"justifyContent\\": \\"center\\",
  \\"alignItems\\": \\"center\\",
  \\"cursor\\": \\"pointer\\"
}"
                                >
                                  <svg
                                    height="10"
                                    style="stroke: currentColor;"
                                    viewBox="0 0 10 10"
                                    width="10"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <path
                                      d="M9 1L5 5M1 9L5 5M5 5L1 1M5 5L9 9"
                                      stroke-linecap="round"
                                      stroke-width="2"
                                    />
                                  </svg>
                                </button>
                              </div>,
                            }
                          }
                          role="dialog"
                          tabIndex={-1}
                        >
                          <Portal>
                            <ForwardRef>
                              <MockStyledComponent
                                forwardedRef={null}
                              >
                                <Portal />
                              </MockStyledComponent>
                            </ForwardRef>
                            <ForwardRef>
                              <MockStyledComponent
                                forwardedRef={null}
                              >
                                <Portal />
                              </MockStyledComponent>
                            </ForwardRef>
                            <ForwardRef>
                              <MockStyledComponent
                                forwardedRef={null}
                              >
                                <Portal />
                              </MockStyledComponent>
                            </ForwardRef>
                            <ForwardRef
                              $animate={true}
                              $closeable={true}
                              $isFocusVisible={false}
                              $isOpen={true}
                              $isVisible={false}
                              $role="dialog"
                              $size="default"
                              $unstable_ModalBackdropScroll={false}
                              aria-label="Close"
                              onBlur={[Function]}
                              onClick={[Function]}
                              onFocus={[Function]}
                            >
                              <MockStyledComponent
                                $animate={true}
                                $closeable={true}
                                $isFocusVisible={false}
                                $isOpen={true}
                                $isVisible={false}
                                $role="dialog"
                                $size="default"
                                $unstable_ModalBackdropScroll={false}
                                aria-label="Close"
                                forwardedRef={null}
                                onBlur={[Function]}
                                onClick={[Function]}
                                onFocus={[Function]}
                              >
                                <Portal>
                                  <CloseIcon>
                                    <Portal>
                                      <Portal />
                                    </Portal>
                                  </CloseIcon>
                                </Portal>
                              </MockStyledComponent>
                            </ForwardRef>
                          </Portal>
                        </MockStyledComponent>
                      </ForwardRef>
                    </Portal>
                  </MockStyledComponent>
                </ForwardRef>
              </Portal>
            </MockStyledComponent>
          </ForwardRef>
        </Portal>
        <Portal />
      </ForwardRef>
    </ForwardRef>
  </mockConstructor>
</Modal>
`;
