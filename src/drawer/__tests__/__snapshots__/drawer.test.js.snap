// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Drawer renders portal when open: Rendered Drawer 1`] = `
<Drawer
  anchor="right"
  animate={true}
  autoFocus={true}
  closeable={true}
  isOpen={true}
  overrides={Object {}}
  renderAll={false}
  showBackdrop={true}
  size="default"
>
  <mockConstructor
    onEscape={[Function]}
  >
    <ForwardRef
      autoFocus={true}
      returnFocus={true}
    >
      <ForwardRef
        as="div"
        autoFocus={true}
        disabled={false}
        lockProps={Object {}}
        noFocusGuards={false}
        persistentFocus={false}
        returnFocus={true}
        sideCar={[Function]}
      >
        <Portal
          key="guard-first"
        />
        <Portal
          key="guard-nearest"
        />
        <SideEffect(FocusWatcher)
          autoFocus={true}
          disabled={false}
          id={Object {}}
          observed={
            <div
              data-focus-lock-disabled="false"
            >
              <div
                data-baseweb="drawer"
                styled-component="true"
                test-style="{
  \\"position\\": \\"fixed\\",
  \\"overflow\\": \\"auto\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0
}"
              >
                <div
                  styled-component="true"
                  test-style="{
  \\"position\\": \\"fixed\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"backgroundColor\\": \\"rgba(0, 0, 0, 0.5)\\",
  \\"WebkitTapHighlightColor\\": \\"transparent\\",
  \\"touchAction\\": \\"none\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\"
}"
                />
                <div
                  aria-label="drawer"
                  styled-component="true"
                  test-style="{
  \\"backgroundColor\\": \\"$theme.colors.backgroundPrimary\\",
  \\"borderTopLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderTopRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"transform\\": \\"translateX(500px)\\",
  \\"right\\": \\"-500px\\",
  \\"top\\": 0,
  \\"maxWidth\\": \\"100%\\",
  \\"maxHeight\\": \\"100%\\",
  \\"width\\": \\"500px\\",
  \\"height\\": \\"100%\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity, transform\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\",
  \\"display\\": \\"flex\\",
  \\"position\\": \\"fixed\\"
}"
                >
                  <div
                    styled-component="true"
                    test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentPrimary\\",
  \\"marginTop\\": \\"$theme.sizing.scale900\\",
  \\"marginBottom\\": \\"$theme.sizing.scale900\\",
  \\"marginLeft\\": \\"$theme.sizing.scale900\\",
  \\"marginRight\\": \\"$theme.sizing.scale900\\",
  \\"overflow\\": \\"auto\\",
  \\"width\\": \\"100%\\"
}"
                  >
                    Drawer Body
                  </div>
                  <button
                    aria-label="Close"
                    styled-component="true"
                    test-style="{
  \\"background\\": \\"transparent\\",
  \\"outline\\": 0,
  \\"paddingLeft\\": 0,
  \\"paddingTop\\": 0,
  \\"paddingRight\\": 0,
  \\"paddingBottom\\": 0,
  \\"fill\\": \\"$theme.colors.primary\\",
  \\"transitionProperty\\": \\"fill, border-color\\",
  \\"transitionDuration\\": \\"$theme.animation.timing100\\",
  \\"borderLeftWidth\\": \\"1px\\",
  \\"borderRightWidth\\": \\"1px\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderBottomWidth\\": \\"1px\\",
  \\"borderLeftStyle\\": \\"solid\\",
  \\"borderRightStyle\\": \\"solid\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderBottomStyle\\": \\"solid\\",
  \\"borderLeftColor\\": \\"transparent\\",
  \\"borderRightColor\\": \\"transparent\\",
  \\"borderTopColor\\": \\"transparent\\",
  \\"borderBottomColor\\": \\"transparent\\",
  \\":hover\\": {
    \\"fill\\": \\"$theme.colors.primary600\\"
  },
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  },
  \\"position\\": \\"absolute\\",
  \\"top\\": \\"$theme.sizing.scale500\\",
  \\"right\\": \\"$theme.sizing.scale500\\",
  \\"width\\": \\"$theme.sizing.scale800\\",
  \\"height\\": \\"$theme.sizing.scale800\\",
  \\"display\\": \\"flex\\",
  \\"justifyContent\\": \\"center\\",
  \\"alignItems\\": \\"center\\",
  \\"cursor\\": \\"pointer\\"
}"
                  >
                    <svg
                      data-baseweb="icon"
                      styled-component="true"
                      test-style="{
  \\"display\\": \\"inline-block\\",
  \\"fill\\": \\"inherit\\",
  \\"color\\": \\"inherit\\",
  \\"height\\": \\"inherit\\",
  \\"width\\": \\"inherit\\"
}"
                      viewBox="0 0 24 24"
                    >
                      <title>
                        Delete
                      </title>
                      <path
                        clip-rule="evenodd"
                        d="M7.29289 7.29289C7.68342 6.90237 8.31658 6.90237 8.70711 7.29289L12 10.5858L15.2929 7.29289C15.6834 6.90237 16.3166 6.90237 16.7071 7.29289C17.0976 7.68342 17.0976 8.31658 16.7071 8.70711L13.4142 12L16.7071 15.2929C17.0976 15.6834 17.0976 16.3166 16.7071 16.7071C16.3166 17.0976 15.6834 17.0976 15.2929 16.7071L12 13.4142L8.70711 16.7071C8.31658 17.0976 7.68342 17.0976 7.29289 16.7071C6.90237 16.3166 6.90237 15.6834 7.29289 15.2929L10.5858 12L7.29289 8.70711C6.90237 8.31658 6.90237 7.68342 7.29289 7.29289Z"
                        fill-rule="evenodd"
                      />
                    </svg>
                  </button>
                </div>
              </div>
            </div>
          }
          onActivation={[Function]}
          onDeactivation={[Function]}
          persistentFocus={false}
          returnFocus={[Function]}
          shards={Array []}
          sideCar={
            Object {
              "assignMedium": [Function],
              "assignSyncMedium": [Function],
              "options": Object {
                "async": true,
                "ssr": false,
              },
              "read": [Function],
              "useMedium": [Function],
            }
          }
        >
          <FocusWatcher
            autoFocus={true}
            disabled={false}
            id={Object {}}
            observed={
              <div
                data-focus-lock-disabled="false"
              >
                <div
                  data-baseweb="drawer"
                  styled-component="true"
                  test-style="{
  \\"position\\": \\"fixed\\",
  \\"overflow\\": \\"auto\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0
}"
                >
                  <div
                    styled-component="true"
                    test-style="{
  \\"position\\": \\"fixed\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"backgroundColor\\": \\"rgba(0, 0, 0, 0.5)\\",
  \\"WebkitTapHighlightColor\\": \\"transparent\\",
  \\"touchAction\\": \\"none\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\"
}"
                  />
                  <div
                    aria-label="drawer"
                    styled-component="true"
                    test-style="{
  \\"backgroundColor\\": \\"$theme.colors.backgroundPrimary\\",
  \\"borderTopLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderTopRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"transform\\": \\"translateX(500px)\\",
  \\"right\\": \\"-500px\\",
  \\"top\\": 0,
  \\"maxWidth\\": \\"100%\\",
  \\"maxHeight\\": \\"100%\\",
  \\"width\\": \\"500px\\",
  \\"height\\": \\"100%\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity, transform\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\",
  \\"display\\": \\"flex\\",
  \\"position\\": \\"fixed\\"
}"
                  >
                    <div
                      styled-component="true"
                      test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentPrimary\\",
  \\"marginTop\\": \\"$theme.sizing.scale900\\",
  \\"marginBottom\\": \\"$theme.sizing.scale900\\",
  \\"marginLeft\\": \\"$theme.sizing.scale900\\",
  \\"marginRight\\": \\"$theme.sizing.scale900\\",
  \\"overflow\\": \\"auto\\",
  \\"width\\": \\"100%\\"
}"
                    >
                      Drawer Body
                    </div>
                    <button
                      aria-label="Close"
                      styled-component="true"
                      test-style="{
  \\"background\\": \\"transparent\\",
  \\"outline\\": 0,
  \\"paddingLeft\\": 0,
  \\"paddingTop\\": 0,
  \\"paddingRight\\": 0,
  \\"paddingBottom\\": 0,
  \\"fill\\": \\"$theme.colors.primary\\",
  \\"transitionProperty\\": \\"fill, border-color\\",
  \\"transitionDuration\\": \\"$theme.animation.timing100\\",
  \\"borderLeftWidth\\": \\"1px\\",
  \\"borderRightWidth\\": \\"1px\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderBottomWidth\\": \\"1px\\",
  \\"borderLeftStyle\\": \\"solid\\",
  \\"borderRightStyle\\": \\"solid\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderBottomStyle\\": \\"solid\\",
  \\"borderLeftColor\\": \\"transparent\\",
  \\"borderRightColor\\": \\"transparent\\",
  \\"borderTopColor\\": \\"transparent\\",
  \\"borderBottomColor\\": \\"transparent\\",
  \\":hover\\": {
    \\"fill\\": \\"$theme.colors.primary600\\"
  },
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  },
  \\"position\\": \\"absolute\\",
  \\"top\\": \\"$theme.sizing.scale500\\",
  \\"right\\": \\"$theme.sizing.scale500\\",
  \\"width\\": \\"$theme.sizing.scale800\\",
  \\"height\\": \\"$theme.sizing.scale800\\",
  \\"display\\": \\"flex\\",
  \\"justifyContent\\": \\"center\\",
  \\"alignItems\\": \\"center\\",
  \\"cursor\\": \\"pointer\\"
}"
                    >
                      <svg
                        data-baseweb="icon"
                        styled-component="true"
                        test-style="{
  \\"display\\": \\"inline-block\\",
  \\"fill\\": \\"inherit\\",
  \\"color\\": \\"inherit\\",
  \\"height\\": \\"inherit\\",
  \\"width\\": \\"inherit\\"
}"
                        viewBox="0 0 24 24"
                      >
                        <title>
                          Delete
                        </title>
                        <path
                          clip-rule="evenodd"
                          d="M7.29289 7.29289C7.68342 6.90237 8.31658 6.90237 8.70711 7.29289L12 10.5858L15.2929 7.29289C15.6834 6.90237 16.3166 6.90237 16.7071 7.29289C17.0976 7.68342 17.0976 8.31658 16.7071 8.70711L13.4142 12L16.7071 15.2929C17.0976 15.6834 17.0976 16.3166 16.7071 16.7071C16.3166 17.0976 15.6834 17.0976 15.2929 16.7071L12 13.4142L8.70711 16.7071C8.31658 17.0976 7.68342 17.0976 7.29289 16.7071C6.90237 16.3166 6.90237 15.6834 7.29289 15.2929L10.5858 12L7.29289 8.70711C6.90237 8.31658 6.90237 7.68342 7.29289 7.29289Z"
                          fill-rule="evenodd"
                        />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            }
            onActivation={[Function]}
            onDeactivation={[Function]}
            persistentFocus={false}
            returnFocus={[Function]}
            shards={Array []}
            sideCar={
              Object {
                "assignMedium": [Function],
                "assignSyncMedium": [Function],
                "options": Object {
                  "async": true,
                  "ssr": false,
                },
                "read": [Function],
                "useMedium": [Function],
              }
            }
          />
        </SideEffect(FocusWatcher)>
        <Portal>
          <ForwardRef
            $anchor="right"
            $animating={true}
            $closeable={true}
            $isFocusVisible={false}
            $isOpen={true}
            $isVisible={false}
            $size="default"
            data-baseweb="drawer"
          >
            <MockStyledComponent
              $anchor="right"
              $animating={true}
              $closeable={true}
              $isFocusVisible={false}
              $isOpen={true}
              $isVisible={false}
              $size="default"
              data-baseweb="drawer"
              forwardedRef={
                Object {
                  "current": <div
                    data-baseweb="drawer"
                    styled-component="true"
                    test-style="{
  \\"position\\": \\"fixed\\",
  \\"overflow\\": \\"auto\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0
}"
                  >
                    <div
                      styled-component="true"
                      test-style="{
  \\"position\\": \\"fixed\\",
  \\"right\\": 0,
  \\"bottom\\": 0,
  \\"top\\": 0,
  \\"left\\": 0,
  \\"backgroundColor\\": \\"rgba(0, 0, 0, 0.5)\\",
  \\"WebkitTapHighlightColor\\": \\"transparent\\",
  \\"touchAction\\": \\"none\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\"
}"
                    />
                    <div
                      aria-label="drawer"
                      styled-component="true"
                      test-style="{
  \\"backgroundColor\\": \\"$theme.colors.backgroundPrimary\\",
  \\"borderTopLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderTopRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomRightRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"borderBottomLeftRadius\\": \\"$theme.borders.surfaceBorderRadius\\",
  \\"transform\\": \\"translateX(500px)\\",
  \\"right\\": \\"-500px\\",
  \\"top\\": 0,
  \\"maxWidth\\": \\"100%\\",
  \\"maxHeight\\": \\"100%\\",
  \\"width\\": \\"500px\\",
  \\"height\\": \\"100%\\",
  \\"opacity\\": 0,
  \\"transitionProperty\\": \\"opacity, transform\\",
  \\"transitionDuration\\": \\"$theme.animation.timing400\\",
  \\"transitionTimingFunction\\": \\"$theme.animation.easeOutCurve\\",
  \\"display\\": \\"flex\\",
  \\"position\\": \\"fixed\\"
}"
                    >
                      <div
                        styled-component="true"
                        test-style="{
  \\"fontFamily\\": \\"$theme.typography.font200.fontFamily\\",
  \\"fontSize\\": \\"$theme.typography.font200.fontSize\\",
  \\"fontWeight\\": \\"$theme.typography.font200.fontWeight\\",
  \\"lineHeight\\": \\"$theme.typography.font200.lineHeight\\",
  \\"color\\": \\"$theme.colors.contentPrimary\\",
  \\"marginTop\\": \\"$theme.sizing.scale900\\",
  \\"marginBottom\\": \\"$theme.sizing.scale900\\",
  \\"marginLeft\\": \\"$theme.sizing.scale900\\",
  \\"marginRight\\": \\"$theme.sizing.scale900\\",
  \\"overflow\\": \\"auto\\",
  \\"width\\": \\"100%\\"
}"
                      >
                        Drawer Body
                      </div>
                      <button
                        aria-label="Close"
                        styled-component="true"
                        test-style="{
  \\"background\\": \\"transparent\\",
  \\"outline\\": 0,
  \\"paddingLeft\\": 0,
  \\"paddingTop\\": 0,
  \\"paddingRight\\": 0,
  \\"paddingBottom\\": 0,
  \\"fill\\": \\"$theme.colors.primary\\",
  \\"transitionProperty\\": \\"fill, border-color\\",
  \\"transitionDuration\\": \\"$theme.animation.timing100\\",
  \\"borderLeftWidth\\": \\"1px\\",
  \\"borderRightWidth\\": \\"1px\\",
  \\"borderTopWidth\\": \\"1px\\",
  \\"borderBottomWidth\\": \\"1px\\",
  \\"borderLeftStyle\\": \\"solid\\",
  \\"borderRightStyle\\": \\"solid\\",
  \\"borderTopStyle\\": \\"solid\\",
  \\"borderBottomStyle\\": \\"solid\\",
  \\"borderLeftColor\\": \\"transparent\\",
  \\"borderRightColor\\": \\"transparent\\",
  \\"borderTopColor\\": \\"transparent\\",
  \\"borderBottomColor\\": \\"transparent\\",
  \\":hover\\": {
    \\"fill\\": \\"$theme.colors.primary600\\"
  },
  \\":focus\\": {
    \\"outline\\": \\"none\\"
  },
  \\"position\\": \\"absolute\\",
  \\"top\\": \\"$theme.sizing.scale500\\",
  \\"right\\": \\"$theme.sizing.scale500\\",
  \\"width\\": \\"$theme.sizing.scale800\\",
  \\"height\\": \\"$theme.sizing.scale800\\",
  \\"display\\": \\"flex\\",
  \\"justifyContent\\": \\"center\\",
  \\"alignItems\\": \\"center\\",
  \\"cursor\\": \\"pointer\\"
}"
                      >
                        <svg
                          data-baseweb="icon"
                          styled-component="true"
                          test-style="{
  \\"display\\": \\"inline-block\\",
  \\"fill\\": \\"inherit\\",
  \\"color\\": \\"inherit\\",
  \\"height\\": \\"inherit\\",
  \\"width\\": \\"inherit\\"
}"
                          viewBox="0 0 24 24"
                        >
                          <title>
                            Delete
                          </title>
                          <path
                            clip-rule="evenodd"
                            d="M7.29289 7.29289C7.68342 6.90237 8.31658 6.90237 8.70711 7.29289L12 10.5858L15.2929 7.29289C15.6834 6.90237 16.3166 6.90237 16.7071 7.29289C17.0976 7.68342 17.0976 8.31658 16.7071 8.70711L13.4142 12L16.7071 15.2929C17.0976 15.6834 17.0976 16.3166 16.7071 16.7071C16.3166 17.0976 15.6834 17.0976 15.2929 16.7071L12 13.4142L8.70711 16.7071C8.31658 17.0976 7.68342 17.0976 7.29289 16.7071C6.90237 16.3166 6.90237 15.6834 7.29289 15.2929L10.5858 12L7.29289 8.70711C6.90237 8.31658 6.90237 7.68342 7.29289 7.29289Z"
                            fill-rule="evenodd"
                          />
                        </svg>
                      </button>
                    </div>
                  </div>,
                }
              }
            >
              <Portal>
                <ForwardRef
                  $anchor="right"
                  $animating={true}
                  $closeable={true}
                  $isFocusVisible={false}
                  $isOpen={true}
                  $isVisible={false}
                  $size="default"
                  onClick={[Function]}
                >
                  <MockStyledComponent
                    $anchor="right"
                    $animating={true}
                    $closeable={true}
                    $isFocusVisible={false}
                    $isOpen={true}
                    $isVisible={false}
                    $size="default"
                    forwardedRef={null}
                    onClick={[Function]}
                  >
                    <Portal />
                  </MockStyledComponent>
                </ForwardRef>
                <ForwardRef
                  $anchor="right"
                  $animating={true}
                  $closeable={true}
                  $isFocusVisible={false}
                  $isOpen={true}
                  $isVisible={false}
                  $size="default"
                  aria-label="drawer"
                >
                  <MockStyledComponent
                    $anchor="right"
                    $animating={true}
                    $closeable={true}
                    $isFocusVisible={false}
                    $isOpen={true}
                    $isVisible={false}
                    $size="default"
                    aria-label="drawer"
                    forwardedRef={null}
                  >
                    <Portal>
                      <ForwardRef
                        $anchor="right"
                        $animating={true}
                        $closeable={true}
                        $isFocusVisible={false}
                        $isOpen={true}
                        $isVisible={false}
                        $size="default"
                      >
                        <MockStyledComponent
                          $anchor="right"
                          $animating={true}
                          $closeable={true}
                          $isFocusVisible={false}
                          $isOpen={true}
                          $isVisible={false}
                          $size="default"
                          forwardedRef={null}
                        >
                          <Portal />
                        </MockStyledComponent>
                      </ForwardRef>
                      <ForwardRef
                        $anchor="right"
                        $animating={true}
                        $closeable={true}
                        $isFocusVisible={false}
                        $isOpen={true}
                        $isVisible={false}
                        $size="default"
                        aria-label="Close"
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                      >
                        <MockStyledComponent
                          $anchor="right"
                          $animating={true}
                          $closeable={true}
                          $isFocusVisible={false}
                          $isOpen={true}
                          $isVisible={false}
                          $size="default"
                          aria-label="Close"
                          forwardedRef={null}
                          onBlur={[Function]}
                          onClick={[Function]}
                          onFocus={[Function]}
                        >
                          <Portal>
                            <CloseIcon>
                              <Delete
                                color="inherit"
                                size="inherit"
                              >
                                <Icon
                                  color="inherit"
                                  size="inherit"
                                  title="Delete"
                                  viewBox="0 0 24 24"
                                >
                                  <ForwardRef
                                    $color="inherit"
                                    $size="inherit"
                                    data-baseweb="icon"
                                    viewBox="0 0 24 24"
                                  >
                                    <MockStyledComponent
                                      $color="inherit"
                                      $size="inherit"
                                      data-baseweb="icon"
                                      forwardedRef={null}
                                      viewBox="0 0 24 24"
                                    >
                                      <Portal>
                                        <Portal />
                                        <Portal />
                                      </Portal>
                                    </MockStyledComponent>
                                  </ForwardRef>
                                </Icon>
                              </Delete>
                            </CloseIcon>
                          </Portal>
                        </MockStyledComponent>
                      </ForwardRef>
                    </Portal>
                  </MockStyledComponent>
                </ForwardRef>
              </Portal>
            </MockStyledComponent>
          </ForwardRef>
        </Portal>
        <Portal />
      </ForwardRef>
    </ForwardRef>
  </mockConstructor>
</Drawer>
`;
