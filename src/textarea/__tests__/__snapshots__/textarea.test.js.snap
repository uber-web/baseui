// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Textarea Basic functionality: Textarea has correct props 1`] = `
Object {
  "aria-describedby": null,
  "aria-invalid": false,
  "aria-label": null,
  "aria-labelledby": null,
  "aria-required": false,
  "autoComplete": "on",
  "children": "textarea value",
  "disabled": false,
  "id": undefined,
  "inputMode": "text",
  "max": undefined,
  "min": undefined,
  "name": "",
  "onBlur": [Function],
  "onChange": [MockFunction],
  "onFocus": [Function],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onKeyUp": [Function],
  "pattern": null,
  "placeholder": "Placeholder",
  "required": false,
  "rows": 3,
  "styled-component": "true",
  "test-style": Object {
    "::placeholder": Object {
      "color": "$theme.colors.contentSecondary",
    },
    "backgroundColor": "transparent",
    "borderStyle": "none",
    "borderWidth": 0,
    "boxSizing": "border-box",
    "caretColor": "$theme.colors.contentPrimary",
    "color": "$theme.colors.contentPrimary",
    "cursor": "text",
    "fontFamily": "$theme.typography.font300.fontFamily",
    "fontSize": "$theme.typography.font300.fontSize",
    "fontWeight": "$theme.typography.font300.fontWeight",
    "lineHeight": "$theme.typography.font300.lineHeight",
    "margin": "0",
    "maxWidth": "100%",
    "outline": "none",
    "paddingBottom": "$theme.sizing.scale400",
    "paddingLeft": "$theme.sizing.scale550",
    "paddingRight": "$theme.sizing.scale550",
    "paddingTop": "$theme.sizing.scale400",
    "resize": "none",
    "width": "100%",
  },
  "type": "textarea",
  "value": "textarea value",
}
`;

exports[`Textarea Basic functionality: textarea renders BaseInput with correct props passed 1`] = `
Object {
  "adjoined": "none",
  "aria-describedby": null,
  "aria-label": null,
  "aria-labelledby": null,
  "autoComplete": "on",
  "autoFocus": false,
  "clearable": false,
  "data-baseweb": "textarea",
  "disabled": false,
  "error": false,
  "inputMode": "text",
  "name": "",
  "onBlur": [MockFunction],
  "onChange": [MockFunction],
  "onClear": [Function],
  "onFocus": [MockFunction],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onKeyUp": [Function],
  "overrides": Object {
    "Input": Object {
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
    },
    "InputContainer": Object {
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
    },
  },
  "pattern": null,
  "placeholder": "Placeholder",
  "positive": false,
  "required": false,
  "rows": 3,
  "size": "default",
  "type": "textarea",
  "value": "textarea value",
}
`;

exports[`Textarea With component overrides: components overrides get passed to the BaseInput 1`] = `
Object {
  "adjoined": "none",
  "aria-describedby": null,
  "aria-label": null,
  "aria-labelledby": null,
  "autoComplete": "on",
  "autoFocus": false,
  "clearable": false,
  "data-baseweb": "textarea",
  "disabled": false,
  "error": false,
  "inputMode": "text",
  "name": "",
  "onBlur": [MockFunction],
  "onChange": [MockFunction],
  "onClear": [Function],
  "onFocus": [MockFunction],
  "onKeyDown": [Function],
  "onKeyPress": [Function],
  "onKeyUp": [Function],
  "overrides": Object {
    "Input": Object {
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
    },
    "InputContainer": Object {
      "component": Object {
        "$$typeof": Symbol(react.forward_ref),
        "render": [Function],
      },
    },
  },
  "pattern": null,
  "placeholder": "Placeholder",
  "positive": false,
  "required": false,
  "rows": 3,
  "size": "default",
  "type": "textarea",
  "value": "textarea value",
}
`;
